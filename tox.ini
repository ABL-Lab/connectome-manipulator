[base]
name = connectome_manipulator
testdeps =
    libsonata
    mock
    pytest
    tables

[tox]
envlist =
    lint
    coverage

minversion = 4

# ignore basepython for envs that already specify a version
ignore_basepython_conflict = true

[testenv]
deps = {[base]testdeps}

[testenv:unit]
commands = pytest -vv tests/unit

[testenv:functional]
passenv =
    PATH
allowlist_externals =
    parquet2hdf5
commands = pytest -vv tests/functional

[testenv:integration]
passenv =
    PATH
changedir =
    tests/integration
allowlist_externals =
    bash
    echo
    find
    cat
    h5ls
commands =
    echo "Testing with Dask"
    connectome-manipulator -v manipulate-connectome wiring_config.json \
        --output-dir {temp_dir}/integration_dask \
        --profile --convert-to-sonata \
        --parallel \
        --splits 4 \
        -a processes=1 \
        -a n_workers=2 \
        -a threads_per_worker=1
    find {temp_dir}/integration_dask/logs -type f -name '*.task-*.log' -exec cat -n {} \;
    bash -c 'h5ls -S {temp_dir}/integration_dask/edges.h5/edges/All__All__chemical/target_node_id | grep "{127}" -q'

[testenv:lint]
deps =
    pycodestyle
    pydocstyle
    pylint
    black[jupyter]
commands =
    pycodestyle {[base]name}
    pydocstyle {[base]name}
    pylint {[base]name}
    black --check .

[testenv:coverage]
usedevelop=True
deps =
    {[base]testdeps}
    pytest-cov
commands =
    pytest --cov-report term-missing --cov-report xml --cov={[base]name} tests/unit

[testenv:docs]
changedir = doc
extras = docs
# set warnings as errors using the -W sphinx option
commands = make html SPHINXOPTS=-W
allowlist_externals = make

[pycodestyle]
ignore = E731,W503,W504,E261,E501,E203
max-line-length = 100

[pydocstyle]
# ignore the following
#   - D300: Use """triple double quotes""" (found '''-quotes)
#   - D413: no blank line afer last section
#   - D415: First line should end with a period, question mark, or exclamation point
add-ignore = D300,D413,D415
convention = google
